// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('restaurantForm');
    const submitBtn = document.getElementById('submitBtn');
    
    if (!form) {
        console.error('‚ùå –§–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        return;
    }

    form.addEventListener('submit', async function(e) {
        e.preventDefault(); // –í–ê–ñ–ù–û: –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
        
        console.log('üìù –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è...';
        
        try {
            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(form);
            const data = {};
            
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º FormData –≤ –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }
            
            console.log('üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', data);
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (!data.name || data.name.trim() === '') {
                throw new Error('–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
            console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/restaurants...');
            
            const response = await fetch('/api/restaurants', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(data)
            });
            
            console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || `HTTP error! status: ${response.status}`);
            }
            
            const result = await response.json();
            console.log('‚úÖ –ó–∞–≤–µ–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:', result);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            showSuccessMessage('–ó–∞–≤–µ–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            form.reset();
            
            // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É
            setTimeout(() => {
                if (confirm('–ó–∞–≤–µ–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É –≤—Å–µ—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π?')) {
                    window.location.href = 'list.html';
                }
            }, 1500);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', error);
            showErrorMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + error.message);
        } finally {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            submitBtn.disabled = false;
            submitBtn.innerHTML = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ';
        }
    });
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
function showSuccessMessage(message) {
    const alertContainer = document.getElementById('alertContainer') || createAlertContainer();
    alertContainer.innerHTML = `
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>‚úÖ –£—Å–ø–µ—Ö!</strong> ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    alertContainer.scrollIntoView({ behavior: 'smooth' });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage(message) {
    const alertContainer = document.getElementById('alertContainer') || createAlertContainer();
    alertContainer.innerHTML = `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>‚ùå –û—à–∏–±–∫–∞!</strong> ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    alertContainer.scrollIntoView({ behavior: 'smooth' });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function createAlertContainer() {
    const container = document.createElement('div');
    container.id = 'alertContainer';
    container.className = 'mb-4';
    
    const form = document.getElementById('restaurantForm');
    form.parentNode.insertBefore(container, form);
    
    return container;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å checkbox-–∞–º–∏
function setupCheckboxes() {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            console.log(`Checkbox ${this.name}: ${this.checked}`);
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    setupCheckboxes();
    console.log('‚úÖ –§–æ—Ä–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
});